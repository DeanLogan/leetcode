package main

import ( 
	"fmt"
)

func main(){
	fmt.Println(isValidSudoku(
		[][]byte{{'5','3','.','.','7','.','.','.','.'},
		{'6','.','.','1','9','5','.','.','.'},
		{'.','9','8','.','.','.','.','6','.'},
		{'8','.','.','.','6','.','.','.','3'},
		{'4','.','.','8','.','3','.','.','1'},
		{'7','.','.','.','2','.','.','.','6'},
		{'.','6','.','.','.','.','2','8','.'},
		{'.','.','.','4','1','9','.','.','5'},
		{'.','.','.','.','8','.','.','7','9'},
		},
	))
    fmt.Println(isValidSudoku(
        [][]byte{{'8','3','.','.','7','.','.','.','.'},
        {'6','.','.','1','9','5','.','.','.'},
        {'.','9','8','.','.','.','.','6','.'},
        {'8','.','.','.','6','.','.','.','3'},
        {'4','.','.','8','.','3','.','.','1'},
        {'7','.','.','.','2','.','.','.','6'},
        {'.','6','.','.','.','.','2','8','.'},
        {'.','.','.','4','1','9','.','.','5'},
        {'.','.','.','.','8','.','.','7','9'},
		},
    ))
}

func isValidSudoku(board [][]byte) bool {
    var row, col, grid [9]int

    for i := 0; i < 9; i++ {
        for j := 0; j < 9; j++ {
            if board[i][j] != '.' {
                num := board[i][j] - '1' 
                gridIndex := (i/3)*3 + j/3

                mask := 1 << num
                if (row[i]&mask) != 0 || (col[j]&mask) != 0 || (grid[gridIndex]&mask) != 0 {
                    return false
                }

                row[i] |= mask
                col[j] |= mask
                grid[gridIndex] |= mask
            }
        }
    }

    return true
}